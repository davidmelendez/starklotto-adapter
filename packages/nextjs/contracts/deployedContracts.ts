/**
 * This file is autogenerated by Scaffold-Stark.
 * You should not edit it manually or your changes might be overwritten.
 */

const deployedContracts = {
  devnet: {
    Randomness: {
      address:
        "0x5b3558ec6cbe58d1d1279b428aaace0fd9230b5993e19f482af82306076c54f",
      abi: [
        {
          type: "impl",
          name: "RandomnessImpl",
          interface_name:
            "starklotto_adapter_vrf::Randomness::IRandomnessLottery",
        },
        {
          type: "interface",
          name: "starklotto_adapter_vrf::Randomness::IRandomnessLottery",
          items: [
            {
              type: "function",
              name: "request_randomness_prod",
              inputs: [
                {
                  name: "seed",
                  type: "core::integer::u64",
                },
                {
                  name: "callback_fee_limit",
                  type: "core::integer::u128",
                },
                {
                  name: "publish_delay",
                  type: "core::integer::u64",
                },
              ],
              outputs: [
                {
                  type: "core::integer::u64",
                },
              ],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "devnet_generate",
              inputs: [
                {
                  name: "seed",
                  type: "core::integer::u64",
                },
              ],
              outputs: [
                {
                  type: "core::integer::u64",
                },
              ],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "get_generation_numbers",
              inputs: [
                {
                  name: "id",
                  type: "core::integer::u64",
                },
              ],
              outputs: [
                {
                  type: "core::array::Array::<core::integer::u8>",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_generation_status",
              inputs: [
                {
                  name: "id",
                  type: "core::integer::u64",
                },
              ],
              outputs: [
                {
                  type: "core::integer::u8",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_generation_timestamps",
              inputs: [
                {
                  name: "id",
                  type: "core::integer::u64",
                },
              ],
              outputs: [
                {
                  type: "(core::integer::u64, core::integer::u64)",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_latest_id",
              inputs: [],
              outputs: [
                {
                  type: "core::integer::u64",
                },
              ],
              state_mutability: "view",
            },
          ],
        },
        {
          type: "impl",
          name: "OwnableImpl",
          interface_name: "openzeppelin_access::ownable::interface::IOwnable",
        },
        {
          type: "interface",
          name: "openzeppelin_access::ownable::interface::IOwnable",
          items: [
            {
              type: "function",
              name: "owner",
              inputs: [],
              outputs: [
                {
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "transfer_ownership",
              inputs: [
                {
                  name: "new_owner",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "renounce_ownership",
              inputs: [],
              outputs: [],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "enum",
          name: "core::bool",
          variants: [
            {
              name: "False",
              type: "()",
            },
            {
              name: "True",
              type: "()",
            },
          ],
        },
        {
          type: "constructor",
          name: "constructor",
          inputs: [
            {
              name: "owner",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              name: "vrf_coordinator",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              name: "dev_mode",
              type: "core::bool",
            },
          ],
        },
        {
          type: "struct",
          name: "core::array::Span::<core::felt252>",
          members: [
            {
              name: "snapshot",
              type: "@core::array::Array::<core::felt252>",
            },
          ],
        },
        {
          type: "function",
          name: "receive_random_words",
          inputs: [
            {
              name: "requester_address",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              name: "request_id",
              type: "core::integer::u64",
            },
            {
              name: "random_words",
              type: "core::array::Span::<core::felt252>",
            },
            {
              name: "_calldata",
              type: "core::array::Array::<core::felt252>",
            },
          ],
          outputs: [],
          state_mutability: "external",
        },
        {
          type: "function",
          name: "mark_generation_failed",
          inputs: [
            {
              name: "id",
              type: "core::integer::u64",
            },
            {
              name: "code",
              type: "core::felt252",
            },
          ],
          outputs: [],
          state_mutability: "external",
        },
        {
          type: "function",
          name: "set_vrf_coordinator",
          inputs: [
            {
              name: "addr",
              type: "core::starknet::contract_address::ContractAddress",
            },
          ],
          outputs: [],
          state_mutability: "external",
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
          kind: "enum",
          variants: [
            {
              name: "OwnershipTransferred",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
              kind: "nested",
            },
            {
              name: "OwnershipTransferStarted",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "starklotto_adapter_vrf::Randomness::Randomness::GenerationRequested",
          kind: "struct",
          members: [
            {
              name: "id",
              type: "core::integer::u64",
              kind: "key",
            },
            {
              name: "requester",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
            {
              name: "timestamp",
              type: "core::integer::u64",
              kind: "data",
            },
            {
              name: "is_test",
              type: "core::bool",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "starklotto_adapter_vrf::Randomness::Randomness::GenerationCompleted",
          kind: "struct",
          members: [
            {
              name: "id",
              type: "core::integer::u64",
              kind: "key",
            },
            {
              name: "n1",
              type: "core::integer::u8",
              kind: "data",
            },
            {
              name: "n2",
              type: "core::integer::u8",
              kind: "data",
            },
            {
              name: "n3",
              type: "core::integer::u8",
              kind: "data",
            },
            {
              name: "n4",
              type: "core::integer::u8",
              kind: "data",
            },
            {
              name: "n5",
              type: "core::integer::u8",
              kind: "data",
            },
            {
              name: "timestamp",
              type: "core::integer::u64",
              kind: "data",
            },
            {
              name: "is_test",
              type: "core::bool",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "starklotto_adapter_vrf::Randomness::Randomness::GenerationFailed",
          kind: "struct",
          members: [
            {
              name: "id",
              type: "core::integer::u64",
              kind: "key",
            },
            {
              name: "code",
              type: "core::felt252",
              kind: "data",
            },
            {
              name: "timestamp",
              type: "core::integer::u64",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "starklotto_adapter_vrf::Randomness::Randomness::TestGeneration",
          kind: "struct",
          members: [
            {
              name: "id",
              type: "core::integer::u64",
              kind: "key",
            },
            {
              name: "n1",
              type: "core::integer::u8",
              kind: "data",
            },
            {
              name: "n2",
              type: "core::integer::u8",
              kind: "data",
            },
            {
              name: "n3",
              type: "core::integer::u8",
              kind: "data",
            },
            {
              name: "n4",
              type: "core::integer::u8",
              kind: "data",
            },
            {
              name: "n5",
              type: "core::integer::u8",
              kind: "data",
            },
            {
              name: "timestamp",
              type: "core::integer::u64",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "starklotto_adapter_vrf::Randomness::Randomness::Event",
          kind: "enum",
          variants: [
            {
              name: "OwnableEvent",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
              kind: "flat",
            },
            {
              name: "GenerationRequested",
              type: "starklotto_adapter_vrf::Randomness::Randomness::GenerationRequested",
              kind: "nested",
            },
            {
              name: "GenerationCompleted",
              type: "starklotto_adapter_vrf::Randomness::Randomness::GenerationCompleted",
              kind: "nested",
            },
            {
              name: "GenerationFailed",
              type: "starklotto_adapter_vrf::Randomness::Randomness::GenerationFailed",
              kind: "nested",
            },
            {
              name: "TestGeneration",
              type: "starklotto_adapter_vrf::Randomness::Randomness::TestGeneration",
              kind: "nested",
            },
          ],
        },
      ],
      classHash:
        "0x1a5be748810b5e77913c3ec2d68967a24cb0390bc0bdb4fda03742ab7cf8b77",
    },
  },
  sepolia: {
    Randomness: {
      address:
        "0x31cdafdd0fc1a80d57f3290afff3ba0a62e9d2c628e35c81eb55e05879f0f4f",
      abi: [
        {
          type: "impl",
          name: "RandomnessImpl",
          interface_name:
            "starklotto_adapter_vrf::Randomness::IRandomnessLottery",
        },
        {
          type: "interface",
          name: "starklotto_adapter_vrf::Randomness::IRandomnessLottery",
          items: [
            {
              type: "function",
              name: "request_randomness_prod",
              inputs: [
                {
                  name: "seed",
                  type: "core::integer::u64",
                },
                {
                  name: "callback_fee_limit",
                  type: "core::integer::u128",
                },
                {
                  name: "publish_delay",
                  type: "core::integer::u64",
                },
              ],
              outputs: [
                {
                  type: "core::integer::u64",
                },
              ],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "devnet_generate",
              inputs: [
                {
                  name: "seed",
                  type: "core::integer::u64",
                },
              ],
              outputs: [
                {
                  type: "core::integer::u64",
                },
              ],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "get_generation_numbers",
              inputs: [
                {
                  name: "id",
                  type: "core::integer::u64",
                },
              ],
              outputs: [
                {
                  type: "core::array::Array::<core::integer::u8>",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_generation_status",
              inputs: [
                {
                  name: "id",
                  type: "core::integer::u64",
                },
              ],
              outputs: [
                {
                  type: "core::integer::u8",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_generation_timestamps",
              inputs: [
                {
                  name: "id",
                  type: "core::integer::u64",
                },
              ],
              outputs: [
                {
                  type: "(core::integer::u64, core::integer::u64)",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_latest_id",
              inputs: [],
              outputs: [
                {
                  type: "core::integer::u64",
                },
              ],
              state_mutability: "view",
            },
          ],
        },
        {
          type: "impl",
          name: "OwnableImpl",
          interface_name: "openzeppelin_access::ownable::interface::IOwnable",
        },
        {
          type: "interface",
          name: "openzeppelin_access::ownable::interface::IOwnable",
          items: [
            {
              type: "function",
              name: "owner",
              inputs: [],
              outputs: [
                {
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "transfer_ownership",
              inputs: [
                {
                  name: "new_owner",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "renounce_ownership",
              inputs: [],
              outputs: [],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "enum",
          name: "core::bool",
          variants: [
            {
              name: "False",
              type: "()",
            },
            {
              name: "True",
              type: "()",
            },
          ],
        },
        {
          type: "constructor",
          name: "constructor",
          inputs: [
            {
              name: "owner",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              name: "vrf_coordinator",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              name: "dev_mode",
              type: "core::bool",
            },
          ],
        },
        {
          type: "struct",
          name: "core::array::Span::<core::felt252>",
          members: [
            {
              name: "snapshot",
              type: "@core::array::Array::<core::felt252>",
            },
          ],
        },
        {
          type: "function",
          name: "receive_random_words",
          inputs: [
            {
              name: "requester_address",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              name: "request_id",
              type: "core::integer::u64",
            },
            {
              name: "random_words",
              type: "core::array::Span::<core::felt252>",
            },
            {
              name: "_calldata",
              type: "core::array::Array::<core::felt252>",
            },
          ],
          outputs: [],
          state_mutability: "external",
        },
        {
          type: "function",
          name: "mark_generation_failed",
          inputs: [
            {
              name: "id",
              type: "core::integer::u64",
            },
            {
              name: "code",
              type: "core::felt252",
            },
          ],
          outputs: [],
          state_mutability: "external",
        },
        {
          type: "function",
          name: "set_vrf_coordinator",
          inputs: [
            {
              name: "addr",
              type: "core::starknet::contract_address::ContractAddress",
            },
          ],
          outputs: [],
          state_mutability: "external",
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
          kind: "enum",
          variants: [
            {
              name: "OwnershipTransferred",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
              kind: "nested",
            },
            {
              name: "OwnershipTransferStarted",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "starklotto_adapter_vrf::Randomness::Randomness::GenerationRequested",
          kind: "struct",
          members: [
            {
              name: "id",
              type: "core::integer::u64",
              kind: "key",
            },
            {
              name: "requester",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
            {
              name: "timestamp",
              type: "core::integer::u64",
              kind: "data",
            },
            {
              name: "is_test",
              type: "core::bool",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "starklotto_adapter_vrf::Randomness::Randomness::GenerationCompleted",
          kind: "struct",
          members: [
            {
              name: "id",
              type: "core::integer::u64",
              kind: "key",
            },
            {
              name: "n1",
              type: "core::integer::u8",
              kind: "data",
            },
            {
              name: "n2",
              type: "core::integer::u8",
              kind: "data",
            },
            {
              name: "n3",
              type: "core::integer::u8",
              kind: "data",
            },
            {
              name: "n4",
              type: "core::integer::u8",
              kind: "data",
            },
            {
              name: "n5",
              type: "core::integer::u8",
              kind: "data",
            },
            {
              name: "timestamp",
              type: "core::integer::u64",
              kind: "data",
            },
            {
              name: "is_test",
              type: "core::bool",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "starklotto_adapter_vrf::Randomness::Randomness::GenerationFailed",
          kind: "struct",
          members: [
            {
              name: "id",
              type: "core::integer::u64",
              kind: "key",
            },
            {
              name: "code",
              type: "core::felt252",
              kind: "data",
            },
            {
              name: "timestamp",
              type: "core::integer::u64",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "starklotto_adapter_vrf::Randomness::Randomness::TestGeneration",
          kind: "struct",
          members: [
            {
              name: "id",
              type: "core::integer::u64",
              kind: "key",
            },
            {
              name: "n1",
              type: "core::integer::u8",
              kind: "data",
            },
            {
              name: "n2",
              type: "core::integer::u8",
              kind: "data",
            },
            {
              name: "n3",
              type: "core::integer::u8",
              kind: "data",
            },
            {
              name: "n4",
              type: "core::integer::u8",
              kind: "data",
            },
            {
              name: "n5",
              type: "core::integer::u8",
              kind: "data",
            },
            {
              name: "timestamp",
              type: "core::integer::u64",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "starklotto_adapter_vrf::Randomness::Randomness::Event",
          kind: "enum",
          variants: [
            {
              name: "OwnableEvent",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
              kind: "flat",
            },
            {
              name: "GenerationRequested",
              type: "starklotto_adapter_vrf::Randomness::Randomness::GenerationRequested",
              kind: "nested",
            },
            {
              name: "GenerationCompleted",
              type: "starklotto_adapter_vrf::Randomness::Randomness::GenerationCompleted",
              kind: "nested",
            },
            {
              name: "GenerationFailed",
              type: "starklotto_adapter_vrf::Randomness::Randomness::GenerationFailed",
              kind: "nested",
            },
            {
              name: "TestGeneration",
              type: "starklotto_adapter_vrf::Randomness::Randomness::TestGeneration",
              kind: "nested",
            },
          ],
        },
      ],
      classHash:
        "0x342eab9caa3364fe668dfeaddf7c5ff2516f791c35e39dc7065c00e1b9fc017",
    },
  },
} as const;

export default deployedContracts;
