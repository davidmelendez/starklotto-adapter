name: Next.js CI

# NOTE: Contracts CI temporarily disabled to prevent automatic snforge test execution
# To re-enable contracts CI:
# 1. Uncomment the paths in the 'on:' section below
# 2. Remove the 'if:' condition from the job
# 3. Uncomment and modify the snfoundry installation step as needed
# 4. Uncomment the test and format check steps when ready
#
# To run contracts CI manually when needed, you can:
# - Create a PR with contracts changes (CI will run for Next.js parts only)
# - Or use workflow_dispatch trigger if added to this file

on:
  push:
    paths:
      # Temporarily exclude contracts directory to prevent automatic test execution
      # - "packages/snfoundry/contracts/**"
      - "packages/nextjs/**"
  pull_request:
    branches:
      - main
    paths:
      # Temporarily exclude contracts directory to prevent automatic test execution
      # - "packages/nextjs/**"
      - "packages/snfoundry/contracts/**"

jobs:
  ci:
    runs-on: ${{ matrix.os }}
    # Only run for Next.js changes or when explicitly needed for contracts
    # Note: Contracts CI is temporarily disabled - uncomment paths above to re-enable

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [lts/*]

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Setup node env
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: "yarn"
          #cache-dependency-path: packages/nextjs/yarn.lock

      - name: Install dependencies (Next.js)
        run: yarn install --immutable
        working-directory: ./packages/nextjs

      - name: Install scarb
        uses: software-mansion/setup-scarb@v1
        with:
          tool-versions: ./packages/snfoundry/contracts/.tool-versions
          scarb-lock: ./packages/snfoundry/contracts/Scarb.lock

      # Skip snfoundry installation - not needed until tests are implemented
      # When tests are needed, uncomment and modify this step:
      # - name: Install snfoundry
      #   run: |
      #     curl -L https://github.com/foundry-rs/starknet-foundry/releases/download/v0.48.0/snforge-v0.48.0-linux-amd64.tar.gz | tar -xz
      #     sudo mv snforge-v0.48.0-linux-amd64/snforge /usr/local/bin/snforge
      #     sudo chmod +x /usr/local/bin/snforge

      - name: Clean and Build Contracts
        run: |
          cd packages/snfoundry/contracts
          scarb clean
          scarb build

      # TODO: Uncomment when Cairo smart contract tests are implemented
      # - name: Run smart contract tests
      #   run: yarn test

      # TODO: Uncomment when Cairo code formatting checks are needed
      # - name: Check Code Format
      #   run: yarn format:check

      - name: Run Next.js lint
        run: yarn next:lint --max-warnings=0
        working-directory: ./packages/nextjs

      - name: Check typings on Next.js
        run: yarn next:check-types
        working-directory: ./packages/nextjs

      - name: Run Next.js tests
        run: yarn test run
        working-directory: ./packages/nextjs

      - name: Build Next.js project
        run: yarn build
        working-directory: ./packages/nextjs
